/*
 * File: app/view/CarList.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CarListings.view.CarList', {
    extend: 'Ext.container.Container',
    alias: 'widget.mycontainer1',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.button.Button'
    ],

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 3,
                    store: 'CarDataStore',
                    listeners: {
                        select: {
                            fn: me.onGridpanelSelect,
                            scope: me
                        }
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'manufacturer',
                            text: 'Manufacturer'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'model',
                            text: 'Model'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'price',
                            text: 'Price'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'wiki',
                            text: 'Wiki',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'img',
                            text: 'Img'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'qualities',
                            text: 'Qualities'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    flex: 1,
                    margins: 'auto',
                    defaults: {
                        margin: '10, 10, 10, 10',
                        height: '20px'
                    },
                    title: 'Actions',
                    layout: {
                        type: 'vbox',
                        align: 'stretch',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            margin: '',
                            text: 'New Car'
                        },
                        {
                            xtype: 'button',
                            margin: '',
                            text: 'Edit Car'
                        },
                        {
                            xtype: 'button',
                            margin: '',
                            text: 'Delete Car'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridpanelSelect: function(rowmodel, record, index, eOpts) {
        // grab a reference to the detailPanel via itemId
        // the # in front of the id indicates that we would like to grab a reference by
        debugger;
        var detailPanel = this.child('#detailPanel');
        // update the detailPanel with data
        // this will trigger the tpl to become updates
        detailPanel.update(record.data);

        var chart = this.down('#qualityChart');
        var qualityData = record.get('qualities');
        chart.store.loadData(qualityData);
    }

});